server:
  port: 8081
---

spring:
  profiles: default
  data:
    rest:
      base-path: /auction
  datasource:
    url: jdbc:mariadb://localhost:3306/tatadb
    driver-class-name: org.mariadb.jdbc.Driver
    username: root
    password: 1235
  jpa:
    open-in-view: false
    generate-ddl: true
    show-sql: true
    hibernate:
      ddl-auto: create
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        auction-in:
          group: auction
          destination: auction
          contentType: application/json
        auction-out:
          destination: auction
          contentType: application/json
        payment-out:
          destination: PaymentRequest
          contentType: application/json
        payment-in:
          destination: PaymentResult
          contentType: application/json
        history-out:
          destination: AuctionHistory
          contentType: application/json

logging:
  config: classpath:logback-spring.xml

api:
  auction:
    url: http://localhost:8080

---

spring:
  profiles: docker
  data:
    rest:
      base-path: /auction
  datasource:
#    url: jdbc:mariadb://awesome-shopping-db-mariadb.edu-common:3306/auction
    url: jdbc:mariadb://10.103.129.195:3306/auction
    driver-class-name: org.mariadb.jdbc.Driver
#    username: twopro
#    password: twopro
    username: root
    password: 1235
  jpa:
    open-in-view: false
    generate-ddl: true
    show-sql: true
    hibernate:
      ddl-auto: create
    defer-datasource-initialization: true
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka.kafka.svc.cluster.local:9092
#          brokers: 10.103.69.141:9092
          replication-factor: 1
#          auto-create-topics: true
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        auction-in:
          group: auction
          destination: auction
          contentType: application/json
        auction-out:
          destination: auction
          contentType: application/json
        payment-out:
          destination: PaymentRequest
          contentType: application/json
        payment-in:
          destination: PaymentResult
          contentType: application/json
        history-out:
          destination: AuctionHistory
          contentType: application/json